#!/bin/sh

###################################################################################################
# ssh+tmux = smux
# 
#   a light, POSIX wrapper around ssh to create and attach to tmux sessions on remote computers
###################################################################################################

# POSIX
set -o errexit
set -o nounset

# print usage to stdout
__smux_help() {
  cat <<\HELP

  Using ssh and tmux on remote computers.

 USAGE: 
  smux [SSH Options] [--help] [--list] <host> [session]

 OPTIONS:
  SSH Options : all single-dash options are provided to ssh
  --help      : print this help and exit
  --list      : list the sessions on the input host and exit

 ARGUMENTS:
  host      : (required) hostname of computer you wish to attach to
  session   : (optional) name of session to attach to on the input host 

HELP
}

# list the tmux sessions on the provided remote host
# Arguments:
#   host - the remote computer to get a list of tmux sessions from
# Outputs:
#   print of tmux sessions on that host (empty if there are none)
__smux_list() {
  # we want the ssh options to be broken by whitespace and are two
  # lazy to implement the workarounds described in the wiki
  # shellcheck disable=SC2086
  ssh ${__smux_ssh_opts} -t "$1" "tmux ls 2> /dev/null"
  return $?
}

# attach to a remote tmux session, creating it if necessary
# Arguments:
#   host (required) remote computer to connect to
#   session (optional) if provided, attach to the tmux session with this name
# Outputs:
#   none
__smux_attach() {
  # we want the ssh options to be broken by whitespace and are two
  # lazy to implement the workarounds described in the wiki
  # shellcheck disable=SC2086
  ssh ${__smux_ssh_opts} -t "$1" "tmux attach ${2:+-t} ${2} || tmux new ${2:+-s} $2"
  return $?
}

__smux_ssh_opts=""
__list=""
__smux_dest=""
__smux_sesh=""
while :; do
  case $1 in
    --help)
      __smux_help
      exit 0
      ;;
    --list)
      __list="list"
      ;;
    --*)
      # double-dash, expected smux option
      echo "ERROR: Unrecognized smux option '$1'."
      exit 1
      ;;
    -*)
      # single dash, expect ssh option
      case $1 in
        -B|-b|-c|-D|-E|-e|-F|-I|-i|-J|-L|-l|-m|-O|-o|-p|-Q|-R|-S|-W|-w)
          # these ssh options have an argument after them
          __smux_ssh_opts="${__smux_ssh_opts} $1 $2"
          shift
          ;;
        *)
          # other ssh options are just flags
          __smux_ssh_opts="${__smux_ssh_opts} $1"
      esac
      ;;
    *)
      # no dash, positional smux arguments
      if [ -z "${__smux_dest}" ]; then
        __smux_dest="$1"
      elif [ -z "${__smux_sesh}" ]; then
        __smux_sesh="$1"
      else
        echo "ERROR: More than two positional arguments provided to smux"
        exit 1
      fi
      ;;
  esac
  shift
done

if [ "${__list}" = "list" ]; then
  __smux_list "${__smux_dest}"
  exit $?
else
  __smux_attach "${__smux_dest}" "${__smux_sesh}"
  exit $?
fi
