#!/bin/sh
# SPDX-License-Identifier: GPL-3.0-only
#
# This file is part of the smux project: https://github.com/tomeichlersmith/smux
#
# Copyright (C) 2021 smux contributors
#
# smux is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# smux is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with smux; if not, see <http://www.gnu.org/licenses/>.

# POSIX
set -o errexit
set -o nounset

# Print usage to stdout.
# Arguments:
#   None
# Outputs:
#   print usage with examples.
show_help() {
	cat << EOF
install --prefix /usr/local

Options:
	--prefix/-p:		base bath where all files will be deployed (default /usr/local if root, ~/.local if not)
  --devel/-d:   symlink to install location rather than copy, helpful for testing during development
                ignored if not in the repository
	--help/-h:		show this message
	-v:			show more verbosity
EOF
}

verbose=0
devel=0
prefix=""

# Parse arguments
while [ "$#" -gt 0 ]; do
	case $1 in
		-h | --help)
			# Call a "show_help" function to display a synopsis, then exit.
			show_help
			exit
			;;
		-v | --verbose)
			shift
			verbose=1
			;;
    -d | --devel)
      shift
      devel=1
      ;;
		-p | --prefix)
			if [ -n "$2" ]; then
				prefix="$2"
				shift
				shift
			fi
			;;
		*) # Default case: If no more options then break out of the loop.
			break ;;
	esac
done

# set verbosity
if [ "${verbose}" -ne 0 ]; then
	set -o xtrace
fi

if  [ -z "${prefix}" ]; then
	prefix="/usr/local"
	# in case we're not root, just default to the home directory
	if [ "$(id -u || true)" -ne 0 ]; then
		prefix="${HOME}/.local"
	fi
fi
completion_dest_path="${prefix}/share/bash-completion/completions/"
dest_path="${prefix}/bin"
man_dest_path="${prefix}/share/man/man1"

# get current dir
curr_dir=$(dirname "$0")
cd "${curr_dir}" || exit 1

# if files are available, install files in dest directory
if [ -e "${curr_dir}/smux" ]; then
  if [ "${devel}" -ne 0 ]; then
    copy="ln -sf -t"
    if ! ${copy} "${dest_path}" "${PWD}/smux"; then
	    printf >&2 "Do you have permission to write to %s?\n" "${dest_path}"
      exit 1
    fi
  else
    copy="install -D -m 0644 -t"
    if ! install -D -m 0755 -t "${dest_path}" smux; then
	    printf >&2 "Do you have permission to write to %s?\n" "${dest_path}"
      exit 1
    fi
  fi
	if [ -e "man" ]; then
    for file in "${PWD}"/man/man1/*; do
		  ${copy} "${man_dest_path}" "${file}"
		done
	fi
	if [ -e "completions" ]; then
    for file in "${PWD}"/completions/*; do
			${copy} "${completion_dest_path}" "${file}"
		done
	fi
else
	printf >&2 "\033[1;31m Not inside code repository, cannot install smux\033[0m"
  exit 1
fi

[ ! -w "${dest_path}" ] && printf >&2 "Cannot write into %s, permission denied.\n" "${dest_path}" && exit 1
[ ! -w "${man_dest_path}" ] && printf >&2 "Cannot write into %s, permission denied.\n" "${man_dest_path}" && exit 1

printf >&2 "\033[1;31m Successfully installed to %s.\n\033[0m" "${dest_path}"
case "${PATH}" in
  *"${dest_path}"*)
    if [ "${verbose}" -ne 0 ]; then
      printf >&2  "  Found %s in PATH\n" "${dest_path}"
    fi
    ;;
  *)
    printf >&2 "\033[1;31m Unable to find %s in PATH.\n\033[0m" "${dest_path}"
    printf >&2 "\033[1;31m Be sure that %s is in your \$PATH environment variable for smux to work.\n\033[0m" "${dest_path}"
    ;;
esac
